{"version":3,"sources":["utils/HOCs.js","components/AlertsList.js","components/Alert.js","components/AddAlertForm.js","index.js"],"names":["duration","domElem","AlertWithAutoRemove","Component","entityPropName","arguments","length","undefined","_React$Component","ComponentWithTimeout","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","timeoutId","inherits","createClass","key","value","_this$props","props","id","onRemove","setTimeout","clearInterval","react_default","a","createElement","React","_ref","_ref$alert","alert","message","className","onClick","type","title","AddAlertForm","state","inputRef","createRef","focus","current","reset","setState","onChange","e","target","onKeyDown","keyCode","preventDefault","trim","addAlert","onSubmit","placeholder","ref","disabled","alertsElement","document","getElementById","AlertsPortal","ReactDOM","createPortal","alerts","removeAlert","map","App","formRef","alert_id","focusForm","getNextId","toConsumableArray","alertsList","filter","AddAlertForm_AddAlertForm","rootElement","render","src_App"],"mappings":"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","file":"static/js/main.393bd693.chunk.js","sourcesContent":["import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nexport const withPortal = domElem => Component => props => {\n  return ReactDOM.createPortal(<Component {...props} />, domElem)\n}\n\nexport const withAutoRemove = duration => (Component, entityPropName = 'alert') => {\n  return class ComponentWithTimeout extends React.Component {\n    timeoutId = null\n\n    componentDidMount() {\n      const { [entityPropName]: {id}, onRemove } = this.props\n\n      this.timeoutId = setTimeout(() => {\n        onRemove(id)\n      }, duration)\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timeoutId)\n    }\n\n    render() {\n      return <Component {...this.props} />\n    }\n  }\n}\n","import React from \"react\"\n\nimport { Alert } from \"./Alert\"\nimport { withAutoRemove } from \"../utils/HOCs\"\n\nconst delay = 10000\nconst AlertWithAutoRemove = withAutoRemove(delay)(Alert)\n\nexport const AlertsList = ({ alerts, removeAlert }) => (\n  alerts.map(alert => (\n    <AlertWithAutoRemove alert={alert} key={alert.id} onRemove={removeAlert} />\n  ))\n)\n","import React from \"react\"\n\nexport const Alert = ({ alert: {id, message}, onRemove }) => {\n  const removeAlert = () => onRemove(id)\n\n  return (\n    <div className=\"alert\">\n      <button className=\"close-alert\" onClick={removeAlert} type=\"button\" title=\"remove alert\">+</button>\n      <span>{message}</span>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport class AddAlertForm extends React.Component {\n  state = {\n    message: ''\n  }\n\n  inputRef = React.createRef()\n\n  focus = () => {\n    this.inputRef.current.focus()\n  }\n\n  reset = () => {\n    this.setState({\n      message: ''\n    })\n  }\n\n  onChange = e => {\n    this.setState({\n      message: e.target.value\n    })\n  }\n\n  onKeyDown = e => {\n    const { message } = this.state\n\n    if (e.keyCode === 13) {\n      e.preventDefault()\n    }\n\n    if (e.keyCode === 13 && message.trim()) {\n      this.addAlert()\n    }\n  }\n\n  addAlert = () => {\n    const { message } = this.state\n    const { onSubmit } = this.props\n\n    onSubmit(message)\n\n    this.reset()\n    this.focus()\n  }\n\n  componentDidMount() {\n    this.focus()\n  }\n\n  render() {\n    const { message } = this.state\n\n    return (\n      <form>\n        <div className=\"field\">\n          <input\n            value={ message }\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            type=\"text\"\n            placeholder=\"Alert message...\"\n            ref={this.inputRef}\n          />\n          <button\n            onClick={this.addAlert}\n            disabled={!message.trim()}\n            type=\"button\"\n          >\n            Add alert\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport { withPortal } from \"./utils/HOCs\"\nimport { AlertsList } from \"./components/AlertsList\"\nimport { AddAlertForm } from \"./components/AddAlertForm\"\n\nconst alertsElement = document.getElementById(\"alerts\")\nconst AlertsPortal = withPortal(alertsElement)(AlertsList)\n\nclass App extends React.Component {\n  state = {\n    alerts: []\n  }\n\n  formRef = React.createRef()\n  alert_id = 0\n\n  focusForm = () => this.formRef.current.focus()\n\n  getNextId = () => this.alert_id++\n\n  addAlert = message => {\n    const { alerts } = this.state\n\n    this.setState({\n      alerts: [...alerts, {id: this.getNextId(), message}]\n    })\n  }\n\n  removeAlert = id => {\n    const alertsList = this.state.alerts\n\n    this.setState({\n      alerts: alertsList.filter(alert => alert.id !== id)\n    })\n\n    this.focusForm()\n  }\n\n  render() {\n    const { alerts } = this.state\n\n    return (\n      <div className=\"App\">\n        <AlertsPortal alerts={alerts} removeAlert={this.removeAlert} />\n        <h1>React Portal Homework</h1>\n        <AddAlertForm onSubmit={this.addAlert} ref={this.formRef} />\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}