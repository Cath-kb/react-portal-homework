{"version":3,"sources":["utils/HOCs.js","components/Alert.js","components/AddAlertForm.js","index.js","components/AlertsList.js"],"names":["domElem","Alert","_ref","_ref$alert","alert","id","value","onRemove","react_default","a","createElement","className","onClick","type","title","AddAlertForm","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","inputRef","React","createRef","focusInput","current","focus","clearInput","setState","onChange","e","target","onKeyDown","keyCode","preventDefault","trim","addAlert","onSubmit","props","inherits","createClass","key","placeholder","ref","disabled","Component","alertsElement","document","getElementById","AlertsPortal","ReactDOM","createPortal","alerts","removeAlert","map","Alert_Alert","App","formRef","alert_id","focusForm","increaseId","toConsumableArray","alertsList","filter","AddAlertForm_AddAlertForm","rootElement","render","src_App"],"mappings":"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","file":"static/js/main.351dd235.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\"\nimport React from \"react\"\n\nexport const withPortal = domElem => Component => props => {\n  return ReactDOM.createPortal(<Component {...props} />, domElem)\n}\n","import React from \"react\"\n\nexport const Alert = ({ alert: {id, value}, onRemove }) => {\n  const removeAlert = () => onRemove(id)\n\n  return (\n    <div className=\"alert\">\n      <button className=\"close-alert\" onClick={removeAlert} type=\"button\" title=\"remove alert\">+</button>\n      <span>{value}</span>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport class AddAlertForm extends React.Component {\n  state = {\n    value: ''\n  }\n\n  inputRef = React.createRef()\n\n  focusInput = () => {\n    this.inputRef.current.focus()\n  }\n\n  clearInput = () => {\n    this.setState({\n      value: ''\n    })\n  }\n\n  onChange = e => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  onKeyDown = e => {\n    const { value } = this.state\n\n    if (e.keyCode === 13) {\n      e.preventDefault()\n    }\n\n    if (e.keyCode === 13 && value.trim()) {\n      this.addAlert()\n    }\n  }\n\n  addAlert = () => {\n    const { value } = this.state\n    const { onSubmit } = this.props\n\n    onSubmit(value)\n\n    this.clearInput()\n    this.focusInput()\n  }\n\n  componentDidMount() {\n    this.focusInput()\n  }\n\n  render() {\n    const { value } = this.state\n\n    return (\n      <form>\n        <div className=\"field\">\n          <input\n            value={ value }\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            type=\"text\"\n            placeholder=\"Alert text...\"\n            ref={this.inputRef}\n          />\n          <button\n            onClick={this.addAlert}\n            disabled={!value.trim()}\n            type=\"button\"\n          >\n            Add alert\n          </button>\n        </div>\n      </form>\n    )\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\n\nimport { withPortal } from \"./utils/HOCs\"\nimport { AlertsList } from \"./components/AlertsList\"\nimport { AddAlertForm } from \"./components/AddAlertForm\"\n\nconst alertsElement = document.getElementById(\"alerts\")\nconst AlertsPortal = withPortal(alertsElement)(AlertsList)\n\nclass App extends React.Component {\n  state = {\n    alerts: []\n  }\n\n  formRef = React.createRef()\n  alert_id = 0\n\n  focusForm = () => this.formRef.current.focusInput()\n\n  increaseId = () => this.alert_id++\n\n  addAlert = value => {\n    const { alerts } = this.state\n\n    this.setState({\n      alerts: [...alerts, {id: this.increaseId(), value}]\n    })\n  }\n\n  removeAlert = id => {\n    const alertsList = this.state.alerts\n\n    this.setState({\n      alerts: alertsList.filter(alert => alert.id !== id)\n    })\n\n    this.focusForm()\n  }\n\n  render() {\n    const { alerts } = this.state\n\n    return (\n      <div className=\"App\">\n        <AlertsPortal alerts={alerts} removeAlert={this.removeAlert} />\n        <h1>React Portal Homework</h1>\n        <AddAlertForm onSubmit={this.addAlert} ref={this.formRef} />\n      </div>\n    )\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","import React from \"react\"\nimport { Alert } from \"./Alert\"\n\nexport const AlertsList = ({ alerts, removeAlert }) => (\n  alerts.map(alert => (\n    <Alert alert={alert} key={alert.id} onRemove={removeAlert} />\n  ))\n)\n"],"sourceRoot":""}